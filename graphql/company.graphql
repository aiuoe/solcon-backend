type Company 
{
  id: ID!
  user_id: User! @belongsTo(relation: "user")
  name: String!
  rif: String!
  fyc: DateTime!
  created_at: Date!
  updated_at: Date!
  naccounts: Int @count(relation: "accounts")
  naddress: Int @count(relation: "address")
  nemails: Int @count(relation: "emails")
  nphones: Int @count(relation: "phones")
  nproducts: Int @count(relation: "products")
}

input companyUpsert
{
  id: ID @rules(apply: ["has:companies"])
  name: String! @lower
  rif: String!
  fyc: Date!
}

extend type Query
{
  companies(page: Int!): [Company!]! @paginateAuth(relation: "user" max: 10)
}

extend type Mutation
{
  companyUpsert(input: companyUpsert! @spread): Company! @upsert @inject(context: "user.id", name: "user_id") @guard(with: "api")
  companyDelete(id: ID! @rules(apply: ["has:companies"]) @eq): Company @delete
}