type Product
{
  id: ID!
  company_id: Company! @belongsTo(relation: "company")
  currency_id: Currency! @belongsTo(relation: "currency")
  tax_id: Tax! @belongsTo(relation: "tax")
  name: String!
  description: String!
  price: Float!
  created_at: Date!
  updated_at: Date!
}

input productInput 
{
  id: ID @rules(apply: ["has:company_products"])
  company_id: ID! @rules(apply: ["has:companies"])
  currency_id: ID!
  tax_id: ID! @rules(apply: ["has:company_taxes"])
  name: String!
  description: String!
  price: Float!
}

extend type Query
{
  company_products(id: ID! page: Int!): [Product!]! @paginateAuth(column: "company_id")
}

extend type Mutation
{
  productUpsert(input: productInput! @lower @spread): Product! @upsert
  productDelete(id: ID! @rules(apply: ["has:products"]) @eq): Product @delete
}